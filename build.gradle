import java.util.regex.Matcher
import java.util.regex.Pattern

project.ext.set('versionName', '0.5b')
project.ext.set('versionCode', 5)

project.ext.set('archivesBaseName', "BalanduinoAndroidApp-" + project.versionName)

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}

task update { // Task to update accessory filter and manifest to match version number and code
    def accessoryFile = file("res/xml/accessory_filter.xml")
    def accessoryText = accessoryFile.getText()

    def firstLine = accessoryText.substring(0, accessoryText.indexOf('>')+1) // We need to skip the first line in the xml file
    accessoryText = accessoryText.substring(accessoryText.indexOf('>')+1)

    println "Updating accessory filter version to: " + project.versionName
    def matcherVersionName = Pattern.compile("version=\"(.*?)\"").matcher(accessoryText)
    accessoryText = matcherVersionName.replaceAll("version=\"" + project.versionName + "\"")

    accessoryFile.write(firstLine + accessoryText)


    def manifestFile = file("AndroidManifest.xml")
    def manifestText = manifestFile.getText()

    println "Updating AndroidManifest versionName to: " + project.versionName
    matcherVersionName = Pattern.compile("android:versionName=\"(.*?)\"").matcher(manifestText)
    manifestText = matcherVersionName.replaceAll("android:versionName=\"" + project.versionName + "\"")

    println "Updating AndroidManifest versionCode to: " + project.versionCode
    def matcherVersionCode = Pattern.compile("android:versionCode=\"(.*?)\"").matcher(manifestText)
    manifestText = matcherVersionCode.replaceAll("android:versionCode=\"" + project.versionCode + "\"")

    manifestFile.write(manifestText)
}

apply plugin: 'android'

repositories {
    mavenCentral()
    maven {
        url 'https://github.com/dahlgren/vpi-aar/raw/master'
    }
}

dependencies {
    //compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':libs:GraphView')
    compile 'com.android.support:support-v4:18.0.+'
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.viewpagerindicator:library:2.4.2-SNAPSHOT'
}

android {
    compileSdkVersion 18
    buildToolsVersion '18.0.1'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 18
        versionName = project.versionName
        versionCode = project.versionCode
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
        }
    }
}

// These values are all set in my global gradle.properties file
if (project.hasProperty('storeFile') && project.hasProperty('storePassword') && project.hasProperty('keyAlias') && project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}

// Releasing:
// 1. Update versionName and versionCode
// 2. Run 'gradle clean build'
// 3. Move APK to releases directory
// 4. Upload to Github and create tag
// 5. Upload to Google Play Store
//    * Also take new screenshots if necessary